apiVersion: "v1"
kind: "ReplicationController"
metadata:
  annotations:
    fabric8.io/git-commit: "b9ca556d4e43076f77492a64cc4580276ecea7bc"
    fabric8.io/git-branch: "release-v2.2.141"
    fabric8.io/git-url: "http://gogs.release.cd.fabric8.io/gogsadmin/oss-parent/commit/b9ca556d4e43076f77492a64cc4580276ecea7bc"
    fabric8.io/build-id: "1"
    fabric8.io/build-url: "http://jenkins.release.cd.fabric8.io/job/oss-parent/1"
  labels:
    project: "elasticsearch"
    provider: "fabric8"
    version: "2.2.141"
    group: "io.fabric8.devops.apps"
    package: "logging"
  name: "elasticsearch"
  namespace: default
spec:
  replicas: 1
  selector:
    project: "elasticsearch"
    provider: "fabric8"
    version: "2.2.141"
    group: "io.fabric8.devops.apps"
  template:
    metadata:
      annotations: {}
      labels:
        project: "elasticsearch"
        provider: "fabric8"
        version: "2.2.141"
        group: "io.fabric8.devops.apps"
        package: "logging"
    spec:
      containers:
      - args: []
        command: []
        env:
        - name: "SERVICE"
          value: "elasticsearch-masters"
        - name: "KUBERNETES_NAMESPACE"
          valueFrom:
            fieldRef:
              fieldPath: "metadata.namespace"
        image: "fabric8/elasticsearch-k8s:2.2.1"
        livenessProbe:
          initialDelaySeconds: 60
          tcpSocket:
            port: 9300
        name: "elasticsearch"
        ports:
        - containerPort: 9200
          name: "http"
        - containerPort: 9300
          name: "transport"
        readinessProbe:
          httpGet:
            path: "/_template/logstash"
            port: 9200
          initialDelaySeconds: 5
        securityContext: {}
        volumeMounts:
        - mountPath: "/usr/share/elasticsearch/data"
          name: "elasticsearch-data"
          readOnly: false
      - args: []
        command: []
        env: []
        image: "fabric8/elasticsearch-logstash-template:2.2.141"
        name: "logstash-template"
        ports: []
        volumeMounts: []
      imagePullSecrets: []
      nodeSelector: {}
      volumes:
      - emptyDir:
          medium: ""
        name: "elasticsearch-data"