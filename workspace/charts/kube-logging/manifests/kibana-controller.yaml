apiVersion: "v1"
kind: "ReplicationController"
metadata:
  annotations:
    fabric8.io/git-commit: "b9ca556d4e43076f77492a64cc4580276ecea7bc"
    fabric8.io/git-branch: "release-v2.2.141"
    fabric8.io/git-url: "http://gogs.release.cd.fabric8.io/gogsadmin/oss-parent/commit/b9ca556d4e43076f77492a64cc4580276ecea7bc"
    fabric8.io/build-id: "1"
    fabric8.io/build-url: "http://jenkins.release.cd.fabric8.io/job/oss-parent/1"
  labels:
    project: "kibana"
    provider: "fabric8"
    version: "2.2.141"
    group: "io.fabric8.devops.apps"
    package: "logging"
  name: "kibana"
  namespace: kube-system
spec:
  replicas: 1
  selector:
    project: "kibana"
    provider: "fabric8"
    version: "2.2.141"
    group: "io.fabric8.devops.apps"
  template:
    metadata:
      annotations: {}
      labels:
        project: "kibana"
        provider: "fabric8"
        version: "2.2.141"
        group: "io.fabric8.devops.apps"
        package: "logging"
    spec:
      containers:
      - args: []
        command: []
        env:
        - name: "ELASTICSEARCH_URL"
          value: "http://elasticsearch-logging:9200"
        - name: "KUBERNETES_NAMESPACE"
          valueFrom:
            fieldRef:
              fieldPath: "metadata.namespace"
        image: "fabric8/kibana4:v4.4.2"
        livenessProbe:
          initialDelaySeconds: 60
          tcpSocket:
            port: 5601
        name: "kibana"
        ports:
        - containerPort: 5601
          name: "http"
        readinessProbe:
          httpGet:
            path: "/"
            port: 5601
          initialDelaySeconds: 5
        securityContext: {}
        volumeMounts: []
      - args: []
        command: []
        env:
        - name: "ELASTICSEARCH_URL"
          value: "http://elasticsearch-logging:9200"
        - name: "KUBERNETES_NAMESPACE"
          valueFrom:
            fieldRef:
              fieldPath: "metadata.namespace"
        image: "fabric8/kibana-config:2.2.141"
        name: "kibana-config"
        ports: []
        volumeMounts: []
      imagePullSecrets: []
      nodeSelector: {}
      volumes: []